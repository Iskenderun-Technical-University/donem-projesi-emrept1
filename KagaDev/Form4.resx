<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAABLZSURBVHhe7Z0J0C1FeYZv1IsooKASVDAuERPLFVxwLZdE
        0ahRE7QUy6VIUqK4xSRKURpNGY1ropaWmoqWqCFREg2Jodxx3yIhCIo7rlGjuOAGCsT3hXvwcunh7+me
        c+brnuepeqpu/ff8febMfP3+53xnZnobAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABMwxXlHnLvHfrf/hkAdMhV5M3kI+QL5OvkCfKkHfrf/pn/z4/xY68qW8Xbfjv5
        MPnYmTxC3l1eWwLMwnXlY+Q75TflufL/t9CP8WPfJV3IHqMl7iD/Q54lz5Hnz+TP5Q/lJ+ThcjcJsBH2
        lU+Rp8lfyNREz9G/6zE8lseMzq3kGTL1Wub0B9LvrADWyq/JO8oT5XkyVYwleiyP6bH9HBHZXR4rU9sf
        wVPl9SXAWnAT70j5VZkqwCn02H6OiA3D68gvytR2R/An8v4SYHL2kc+RP5Kp4ptSP8ezpb89iMQh0p/7
        U9scxSdJgEm5nny9rPmsP1Y/l781iNQgdMfdn7VT2xvFYyTAZNxavkemim0TvlseLCNwN0kAwCJwI+5+
        8nSZKrRN6m8Jfk/O3RwkAGARuAHn7/b9XX2qyObwG/JP5JzfdRMA0D2bbPaN9Wz5LDnXGYQEAHSNm31v
        kJts9o3VZ7+9VvoruU1DAEC3zN3sG+s75EFykxAA0B2rZt+nZKqgIusz3+4lNwUBAF0Rsdk31q/LP5Kb
        aA4SANANbvb9jYzY7Burr4h7pvQlyeuEAIAuaKHZN1Y3B18tD5DrggCA5rmN9A06UsXTg2+Tt5DrgACA
        Zmm52TfWU+Q95NQQANAkPTT7xurLih8lt8upIACgOXpq9o3Vk/Xpci85BQQANEWPzb6x+v6Dfy+nuHEm
        AQDN0Huzb4wXyP+UvhNxDQQAhMfNvt+XS2j2jfVk+TuyFAIAQuNmn2+zvaRm31i/In333CvIsRAAEJZV
        s+/HMlUY+Cu/Lz1R9pRjIAAgJL4V9D/KJTf7xuoFPV4pryVzIQAgHJGbfQ6k43cYMZzcHPQKPzeRORAA
        EIbozT5/FHmu9EcT639H/XjyX9KTeysIAAiBV6iJ3Oz7lvT2eTtXrLbZ/5f6nbk9U3qhz8tqDhIAMDvR
        /5p+WvqdSeoOvqt3LX5M6nfn9nvyaOmlzFMQADAr0Zt975W3lVvhx/ixqTHm9mfy5XI/uSsEAMxG9Gaf
        g2nMwpSRw8zNwRPkjeXOEACwcaK/bV41+64mx+Lfifxx5mPyLnIFAQAbpYVm31Fy52bfWPy7HiNqc9Cr
        AT9EmrtKAgA2QvS/jn5H4qWoU82+sXgMjxX1XY5XBH6y9A1VfBZh6jFRJAA6oJdm31giNwcdxB+UXoM/
        9f9RJAAaJ/IkOE8eJ28g14XH9nP4uVLbgJctAdAoLTT7nidLmn1j8XP4uaJ+/IksAdAg0c+Sm6LZN5bo
        zcGoEgCNEb3Zd4Z0g+5yctP4Of3c3obUtuGlJQAaInqz732yptnn5boO32HN0l3eBm9LahvxkhIAjdB7
        s8/LdD1Detku63/XLN1FczBPAiA4S2j2ee3+10gv17Ua1//2z2rW9ac5uLUEQGCiN7a8XY+TNc2+g+U7
        ZWp86//zY0rxtnkbaQ6mJQCCEv2vV22zz+9s7itPk6nxd9aP8WNLzyKkOTgsARAQN/v8+TVys+8QWYr/
        Ko9desyP9e/UvNvwNtMcvKQEQDCiN/v+SdY0+2re2UzRb/C2+zXQHLxIAiAIq7epkZt9z5c1k+83Ze3k
        W4WQxyrFr8GvheYgARCCJTT7bi8/IFPjl+ixPGYpNAcvkgCYmRaafQ+Qpc2+y8vD5OdkavwaPabH9nOU
        4Nfk17bk5iABMCPRT1apbfZdWf6Z/I5MjT+FHtvP4ecqZcnNQQJgJnpv9vkmmS+VP5Wp55hSP4efK3Vj
        zlyW2hwkADZM9O+kfQMLN8iuLkvxzTH/TZ4vU8+xDv1cfs5db8w5Br9mv/boN/GYUgJgg0Rv9n1bPl7W
        NPt8I8yPy9T4m9DP7W0oxa/d+8D7IjV+bxIAG6L3Zt92+XD5ZZkaf5N6G7wt3qYSltQcJAA2QPRm3/tl
        TbNvL/k0GekGmN4Wb5O3rRTvE++b1Pi9SACsmcjXpjuQ/lnWnFRzgPwHea5MPcecepu8bd7GUrxvvI96
        bQ4SAGuihWbfC2RNs++W8u0yNX4kvY3e1lK8j7yvemwOEgBrIPpZZrXNPl+Vd295qkyNH1Fvq7e59IrC
        XpuDBMDERD/P/DPygbK02XdF+Wj5DZkaP7LeZm+7X0MJ3mfed96HqfFblACYkOgnk7ihdTtZipcaf478
        kUyN34Ledr8Gv5ZSvA97aQ4SABMR+XTSKZp90W9IOka/hrGrE+9KL81BAqCS6N8ZT9Hs6/Vc+dprHXpo
        DhIAFfTe7HO4/YHs6TPvrvq1+TWW9kRabw4SAIX03uy7knyS/D+ZGr8n/Rr9Wv2aS2i5OUgAFNB7s29f
        +WK5iSv5oujX6tfs115Ki81BAmAkvTf7flu+WW7ySr4o+jX7tXsflNJac5AAyKSFZt8LZU2z7y7yozI1
        /pL0PvC+KMXHwMeiheYgAZBBC82+J8jSz7BXkA+TX5Kp8Zeo94X3ifdNCT4WPibRm4NHS7gMnObRm301
        Xew9pf8KfE+mxl+y3ifeN95HJfiYRP8W5bWy5orJrone7POdcWuafdeWr5LnyNT4eNG+8T7yvirFx2jK
        OyJPqV+fr5jcX8JORG/2vVHWNPtuLk+UF8jUc+Cv9D7yvvI+K8XHyscs6h+Tt8lbyMWzhGbfofIUmRof
        h/U+874rJXpz0K/vnnKxRD+ryyes1DT7dpN/LL8uU+Pj1nrfeR96X5awag5GPcHqa/IIWfr6msXpHPm8
        7s/Kmmbf3vJZ8myZGh/z9T70vvQ+LWHVHPQxTY0/tz+Uz5RXkYsg+skbtctgXU++XvZwJV8UvS+9T71v
        S5l6ubQp/bl8jbyO7JrIp2+umn03lKXcRp4kU+Njvd633sel+NhGbg6+Q9bcTi0sfhsW+QIOfxR5kbyG
        LGHVzIy62nBPeh97X5d+PPMx9rGO+vHTt1O7l+yGFpp9T5Slzb5WzkLrydqzMf17PuZRm4O1zc8w9N7s
        i/7XpGeneNcWuTm4an5eVTZJ782+G8njZdTXtwS9730MfCxKid4c9OnDvyGbInqz702yptl3Z/lhmRof
        N6+PhY9JKa4F10TUMH+XPFiGp/dm3+XlQ+QXZGp8nE8fEx8bH6MSon+cO03eR5autbB2em/2+Sq1p8qz
        ZGp8nF8fGx+j0isKozcH/1fWrLWwNlpo9v2hLG32XUu+QnIlX3x9jHysfMxKcI24VqI2B73WwrNl6ZmR
        kxO92fdBeQdZyk3lWyVX8rWjj5WPmY9dKa4Z105q/Lmd4szISei92XcPebJMjY/x9bHzMSwlenPwPfLW
        cuP03uzzCRi+SuurMjU+tqOPYc0Vd9Gbg5+S95Mbaw662Rf5zDc3cGruO+8TL/5K+iqt1PjYnj6WPqal
        J9W4liKv2/BN+Ri59uZg9Gbf52RNs88nXPjEC5+AkRof27X2pJpVc9A1lhp/bn0fzedKL6KzFnpv9t1K
        +oSL1NjYjz7GPtalRG8O1i7EmiR6s8+ngx4oS/BnJ3+GOl2mxsf+9LGu+dzsWot8Gvh75W1lNdGbfV5i
        6m9labPP/YyjpD9DpcbHfvUx97F3DZTgmnPtRV3SzZdN31+Wfhy+sPHRc7PP/YzIaxDg+vWxdw24FkqI
        3hz04jpeZGd0yHmHRL6jqhsxh8nSdIt+ZxjcnK6BmjtBuQZdi5Gbg6NCLvo91WubfXeUUZs4OJ+uCddG
        KZGbg57LbuB7bl8mkVdV8WqyNc0+XyX2YPl5mRof0bXhGim9onDVHIy62rMb+Z7jl8JvYyKvq1bb7NtD
        /rn8rkyNj7jSNeJacc2UEL056Dnuxv7FH5/9VcgjZNRm33fkn8rSZt815cvkz2RqfMRdda24Zlw7JbhW
        XbOu3dT4c+u57jl/4deg95ZfkakHzm1ts+8m8t8lV/LhWF0zrh3XUAnRm4Oe85772/51xw+i+SFZ05S5
        u/yETI2NmKtryLVUimvYtZwae2499y+8y0jqP+fSDZR/kaXNvu3ykTLquxpsT9eSa8q1VYJr2TUdrTno
        uR+qMebGyd/JfWUJXl/tL+UPZGp8xFJdU66t0jX8XNOu7UjNQc/9bf+z0w/mtLbZ53XVXi3PlanxEWt1
        bbnGStfwi9Yc9Nzf9jQ59+Wvq2Zf6fevB0mvq5YaG3FqXWuuuRJc4xGag57znvvb9pfvlqkHbcKaZp+/
        xvCtkj8pU2MjrkvXXM1tuuduDnrOe+5fyCHyDJl64LpcNftKV3Xx3U+OlNGamLgcXXuuwdI78bj252gO
        eq57zl8Cr7jqq4dSvzC1tc0+3/XEdz/xLZJT4yNuStdgzZ14Nt0c9Bz3XL8UPnHBlw6u+/JYN0CeLK8s
        S/AFDcdJ3/0kNT7ipnUtuia3vNhmAM8Fz4l1Nwc9tz3HB0+s83XDTrN1TS5fbPEgWdrs80KOUe9MhOja
        LF1w1nPCc2NdF6t5Tntub3lvAL+V8X3FUoPU6AUcS5t93jmRV2tBXLlahar0j5znyDoWnvWczv6Y4hVH
        vOhAaqCx1jb7NvX2CHEqaz/mTt0c9FwevYqQVxypvVGmGxsvlqXNvl+XL5GRzp5CzNE169p1DZfgOeO5
        U1v7nsPFqwfdV5Z+zVabgjeWb5HRzp9GzNW16xp2LZdQ++7Xc9dzuBif5ODliM+WqScYsqbZ5+e8q/yY
        TI2N2JquZdd0yUlDpc1Bz1nP3dITlS7GJzn8tcw9XdgNjDvJUu4svyBTYyO2qmvatV2K51Ruc9Bz1XN2
        sqXCvBa5l1VKPdlKv93x9cWlzb4Vvh1TanzE1v0LWYPnlufYVh+LPVc9ZyfF5w0fK1PvBL4va87s25lj
        5K7jI/aga7uW1ZmDqY/lnpueoxef4z81Xl3V5z6fKL8kT5Wvk4fK0hVWdoUAwF6dIgCM55pv4ut3A6fJ
        M+Vbpedm6QrIo9hLOmX8FcfUSxITANirUwXACn9LsJ/0XNzTP+gBAgB7deoA6BICAHuVAMiAAMBeJQAy
        IACwVwmADAgA7FUCIAMCAHuVAMiAAMBeJQAyIACwVwmADAgA7FUCIAMCAHuVAMiAAMBeJQAyIACwVwmA
        DAgA7FUCIAMCAHuVAMiAAMBeJQAyIACwVwmADAgA7FUCIAMCAHuVAMiAAMBeJQAyIACwVwmADAgA7FUC
        IAMCYNiz5Cnyv4PqbfM2prYdCYAsCIBh3yh9C+hrSC8QEUlvk7fN25jadiQAsiAAhvWqL9tlVLxt3sbU
        tiMBkAUBMKxXYdpNRsXb5m1MbTsSAFkQAMMSAG1LAGRAAAxLALQtAZABATAsAdC2BEAGBMCwBEDbEgAZ
        EADDEgBtSwBkQAAMSwC0LQGQAQEwLAHQtgRABgTAsARA2xIAGRAAwxIAbUsAZEAADEsAtC0BkAEBMCwB
        0LYEQAYEwLAEQNsSABkQAMMSAG1LAGRAAAxLALQtAZABATAsAdC2BEAGBMCwBEDbEgAZEADDEgBtSwBk
        QAAMSwC0LQGQAQEwLAHQtgRABgTAsARA2xIAGRAAwxIAbUsAZEAADEsAtC0BkAEBMCwB0LYEQAYEwLAE
        QNsSABkQAMMSAG1LAGRAAAxLALQtAZABATAsAdC2BEAGBMCwBEDbEgAZEADDEgBtSwBkQAAMSwC0LQGQ
        AQEwLAHQtgRABgTAsARA2xIAGRAAwxIAbUsAZEAADEsAtC0BkAEBMCwB0LYEQAYEwLAEQNsSABkQAMMS
        AG1LAGRAAAxLALQtAZABATAsAdC2BEAGBMCwBEDbEgAZEADDEgBtSwBkQAAMSwC0LQGQAQEwLAHQtgRA
        BgTAsARA2xIAGRAAwxIAbUsAZEAADEsAtC0BkAEBMCwB0LYEQAZHy9TOQwKgdV3bsAWPlefL1A5cugRA
        u7qmj5KwBQ+UP5Gpnbh0CYB2/ak8TMIWHCjPlKmduHQJgHb9svwtCVuwu3yDTO3EpUsAtKtr2rUNGfyu
        /K5M7cglSwC0qWvZNQ2ZuJCeJ8+TqR26VAmA9nQNu5YjH7eQXF36bdMFMrVjlygB0JauXdewaxkK2E++
        XLqDmtrBS5MAaEfXrGvXNQwV7CGPkB+X58jUzl6K/msSPQCW3sB1jbpWXbOuXZiIA+RD5UvlCfL98qPy
        IwvRRfUMuV1GxdvmbfS2pl5Dj7oGXYuuSdema9S1CmvictLJuo/0Z6sluaeMjrcxte0961p0Tbo2AQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDZbNv2SzJPi01uAD6a
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>